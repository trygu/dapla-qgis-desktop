name: Build, Push, and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract VERSION from Dockerfile
      id: extract_version
      run: |
        VERSION=$(grep "^ARG VERSION=" Dockerfile | cut -d '=' -f2)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"

    - name: Fetch all tags
      run: git fetch --tags

    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "refs/tags/$VERSION" >/dev/null 2>&1; then
          echo "Tag $VERSION already exists."
          echo "VERSION_CHANGED=false" >> $GITHUB_ENV
        else
          echo "Tag $VERSION does not exist."
          echo "VERSION_CHANGED=true" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      if: env.VERSION_CHANGED == 'true'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: env.VERSION_CHANGED == 'true'
      uses: docker/build-push-action@v5
      with:
        push: true
        platforms: linux/amd64
        tags: |
          ghcr.io/${{ github.repository_owner }}/dapla-qgis-desktop:latest
          ghcr.io/${{ github.repository_owner }}/dapla-qgis-desktop:${{ env.VERSION }}

    - name: Create GitHub Release
      if: env.VERSION_CHANGED == 'true'
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: Release of version ${{ env.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
